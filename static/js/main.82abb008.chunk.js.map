{"version":3,"sources":["store.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","components/pages/cart-page.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/home-page.js","components/shop-header/index.js","components/shop-header/shop-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","index.js"],"names":["timeout","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","CartPage","BookListItem","book","onAddedToCart","title","author","price","coverImage","className","src","alt","to","onClick","fetchBooks","dispatch","type","getBooks","then","data","payload","catch","error","booksError","bookAddedToCart","bookID","compose","funcs","comp","reduceRight","prevResult","f","Spinner","ErrorIndicator","BookList","books","map","id","BookListContainer","this","loading","Component","connect","bookList","bindActionCreators","mapDispatchToProps","onIncrease","onDecrease","onDelete","ShoppingCartTable","shoppingCart","items","cartItems","total","orderTotal","item","idx","count","HomePage","ShopHeader","numItems","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateCartItems","slice","updateOrder","bookId","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","applyMiddleware","thunkMiddleware","getState","next","console","log","ReactDOM","render","value","document","getElementById"],"mappings":"+NAoB8BA,E,iECjBeC,IAAMC,gBADlCC,E,EAAVC,SACUC,E,EAAVC,SCgBQC,EAfc,kBAAM,SAACC,GAChC,OAAO,SAACC,GACJ,OACI,cAACJ,EAAD,UAEQ,SAACK,GACG,OAAQ,cAACF,EAAD,2BAAaC,GAAb,IAAoBC,iBAAoBA,W,OCEzDC,EAVE,WAEf,OACE,4C,gCCHWC,G,MCGM,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,cACpBC,EAAqCF,EAArCE,MAAOC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,MAAOC,EAAeL,EAAfK,WAC9B,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qBAAKC,IAAKF,EAAYG,IAAI,YAE5B,sBAAKF,UAAU,eAAf,UACE,cAAC,IAAD,CAAMG,GAAG,IAAIH,UAAU,aAAvB,SACGJ,IAEH,qBAAKI,UAAU,cAAf,SAA8BH,IAC9B,sBAAKG,UAAU,aAAf,cAA8BF,KAC9B,wBAAQM,QAAWT,EAAeK,UAAU,2BAA5C,iCCWFK,EAAa,SAACd,GAAD,OAAsB,kBAAM,SAACe,GAC5CA,EAtBO,CACHC,KAAM,wBAsBdhB,EAAiBiB,WAChBC,MAAK,SAACC,GAAD,OACNJ,EAhCW,CACHC,KAAM,sBACNI,QA8BaD,OAEpBE,OAAM,SAACC,GAASP,EAtBE,SAACO,GAChB,MAAO,CACHN,KAAM,sBACNI,QAASE,GAmBSC,CAAWD,UAKxBE,EAAkB,SAACC,GAC5B,MAAO,CACHT,KAAM,qBACNI,QAASK,ICrCFC,EANC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAc,SAACC,GAC3B,OAAOD,EAAME,aACT,SAACC,EAAYC,GAAb,OAAmBA,EAAED,KAAYF,KCA1BI,G,MCCC,WACd,OACE,qBAAKvB,UAAU,0CAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,wBACA,8BACE,iCCRKwB,ECCQ,WACnB,OACI,qBAAKxB,UAAU,kBAAf,SACI,uD,OCMNyB,G,MAAW,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAO/B,EAAoB,EAApBA,cACvB,OACE,oBAAIK,UAAU,YAAd,SACG0B,EAAMC,KAAI,SAACjC,GACV,OACE,6BACE,cAAC,EAAD,CAAcA,KAAMA,EACpBC,cAAe,kBAAIA,EAAcD,EAAKkC,QAF/BlC,EAAKkC,WAUpBC,E,kLAEFC,KAAKxC,MAAMe,e,+BAGH,IAAD,EAC0CyB,KAAKxC,MAA9CoC,EADD,EACCA,MAAOK,EADR,EACQA,QAASlB,EADjB,EACiBA,MAAOlB,EADxB,EACwBA,cAC/B,OAAIoC,EACK,cAAC,EAAD,IAGLlB,EACK,cAAC,EAAD,IAGF,cAAC,EAAD,CAAUa,MAAOA,EAAO/B,cAAeA,Q,GAflBqC,aCxBjBP,ED6DAR,EACb7B,IACA6C,aAjBsB,SAAC,GAA2C,IAAD,IAAxCC,SACzB,MAAO,CACLR,MAF+D,EAA7BA,MAGlCK,QAH+D,EAAtBA,QAIzClB,MAJ+D,EAAbA,UAQ3B,SAACP,EAAD,GAAqC,IAAxBf,EAAuB,EAAvBA,iBACtC,OAAO4C,YAAmB,CACxB9B,WAAYA,EAAWd,GACvBI,cAAeoB,GACdT,MAGUW,CAGbY,GEIIO,G,MAAqB,CAEvBC,WAAYtB,EACZuB,WR1B+B,SAACtB,GAChC,MAAO,CACHT,KAAM,yBACNI,QAASK,IQwBbuB,SRpBmC,SAACvB,GACpC,MAAO,CACHT,KAAM,8BACNI,QAASK,MSvDFwB,ED4EAP,aAfS,SAAC,GAA+C,IAAD,IAA5CQ,aACzB,MAAO,CACLC,MAFmE,EAA7BC,UAGtCC,MAHmE,EAAlBC,cAebT,EAAzBH,EAxEW,SAAC,GAMpB,IALLS,EAKI,EALJA,MACAE,EAII,EAJJA,MACAP,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACAC,EACI,EADJA,SA4BA,OACE,sBAAKvC,UAAU,sBAAf,UACE,4CACA,wBAAOA,UAAU,QAAjB,UACE,gCACE,+BACE,mCACA,sCACA,uCACA,uCACA,6CAIJ,gCACG0C,EAAMf,KAxCG,SAACmB,EAAMC,GAAS,IACxBnB,EAA4BkB,EAA5BlB,GAAIhC,EAAwBkD,EAAxBlD,MAAOoD,EAAiBF,EAAjBE,MAAOJ,EAAUE,EAAVF,MAC1B,OACE,+BACE,6BAAKG,EAAI,IACT,6BAAKnD,IACL,6BAAKoD,IACL,mCAAMJ,KACN,+BACE,wBAAQxC,QAAS,kBAAImC,EAASX,IAC9B5B,UAAU,4CADV,SAEE,mBAAGA,UAAU,oBAEf,wBAAQI,QAAS,kBAAIiC,EAAWT,IAChC5B,UAAU,6CADV,SAEE,mBAAGA,UAAU,wBAEf,wBAAQI,QAAS,kBAAIkC,EAAWV,IAC/B5B,UAAU,6CADX,SAEE,mBAAGA,UAAU,8BAhBV4B,WAyCT,sBAAK5B,UAAU,QAAf,qBAAgC4C,WEzCvBK,EAZE,WACf,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCRSC,G,MCGI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUP,EAAY,EAAZA,MAC9B,OACE,yBAAQ5C,UAAU,kBAAlB,UACE,cAAC,IAAD,CAAMA,UAAU,iBAAiBG,GAAG,IAApC,qBACA,eAAC,IAAD,CAAMA,GAAG,QAAQH,UAAU,gBAA3B,UACE,mBAAGA,UAAU,kCACZmD,EAFH,YAEsBP,EAFtB,YCNSQ,ECeAhE,KAXH,SAAC,GAAuB,EAAtBG,iBACZ,OACA,uBAAM8D,KAAK,OAAOrD,UAAU,YAA5B,UACE,cAAC,EAAD,CAAYmD,SAAU,EAAGP,MAAO,MAChC,eAAC,IAAD,WACI,cAAC,IAAD,CAAOU,KAAK,IAAIC,UAAYN,EAAUO,OAAK,IAC3C,cAAC,IAAD,CAAOF,KAAK,QAAQC,UAAY/D,aCXzBiE,E,4MCIXC,MAAQ,CACJC,UAAU,G,kEAIV7B,KAAK8B,SAAS,CAACD,UAAU,M,+BAIzB,OAAI7B,KAAK4B,MAAMC,SACJ,cAAC,EAAD,IAEJ7B,KAAKxC,MAAMuE,a,GAdgB7B,aCHrB8B,E,iDAEnBpD,KAAO,CACL,CACEkB,GAAI,EACJhC,MAAO,iCACPC,OAAQ,kBACRC,MAAO,GACPC,WAAY,4FACd,CACE6B,GAAI,EACJhC,MAAO,cACPC,OAAQ,oBACRC,MAAO,GACPC,WAAY,6F,uDAGJ,IAAD,OACT,OAAO,IAAIgE,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACNC,KAAKC,SAAS,IACfH,EAAO,IAAII,MAAM,4BAEjBL,EAAQ,EAAKtD,QAId,Y,aCUM4D,EArCQ,SAACZ,EAAOa,GAE7B,QAAcC,IAAVd,EACF,MAAO,CACLhC,MAAO,GACPK,SAAS,EACTlB,MAAO,MAIX,OAAQ0D,EAAOhE,MACb,IAAK,sBACH,MAAO,CACLmB,MAAO,GACPK,SAAS,EACTlB,MAAO,MAGX,IAAK,sBACH,MAAO,CACLa,MAAO6C,EAAO5D,QACdoB,SAAS,EACTlB,MAAO,MAGX,IAAK,sBACH,MAAO,CACLa,MAAO,GACPK,SAAS,EACTlB,MAAO0D,EAAO5D,SAGlB,QACE,OAAO+C,EAAMxB,W,QCjCbuC,EAAkB,SAAC9B,EAAWG,EAAMC,GAExC,OAAmB,IAAfD,EAAKE,MACD,GAAN,mBACKL,EAAU+B,MAAM,EAAG3B,IADxB,YAEKJ,EAAU+B,MAAM3B,EAAM,MAIhB,IAATA,EACI,GAAN,mBACKJ,GADL,CAEEG,IAIE,GAAN,mBACKH,EAAU+B,MAAM,EAAG3B,IADxB,CAEED,GAFF,YAGKH,EAAU+B,MAAM3B,EAAM,MAoBvB4B,EAAc,SAACjB,EAAOkB,EAAQC,GAAc,IAC5BnD,EAAwCgC,EAApDxB,SAAYR,MAAyBiB,EAAee,EAA/BjB,aAAgBE,UAEvCjD,EAAOgC,EAAMoD,MAAK,qBAAElD,KAAegD,KACnCG,EAAYpC,EAAUqC,WAAU,qBAAEpD,KAAegD,KAGjDK,EAvBe,SAACvF,GAA+B,IAAzBoD,EAAwB,uDAAjB,GAAI+B,EAAa,yCAMpC/B,EAHdlB,UAHkD,MAG7ClC,EAAKkC,GAHwC,IAMpCkB,EAFdE,aAJkD,MAI1C,EAJ0C,IAMpCF,EADdlD,aALkD,MAK1CF,EAAKE,MALqC,IAMpCkD,EAAdF,MAEF,MAAO,CACLhB,KACAhC,QACAoD,MAAOA,EAAQ6B,EACfjC,YAZkD,MAM1C,EAN0C,GAYnCiC,EAASnF,EAAKI,OAWfoF,CAAexF,EAFlBiD,EAAUoC,GAEoBF,GAC3C,MAAO,CACLhC,WAAY,EACZF,UAAW8B,EAAgB9B,EAAWsC,EAASF,KA6BpCI,EAzBY,SAACzB,EAAOa,GAEjC,QAAcC,IAAVd,EACF,MAAO,CACLf,UAAW,GACXE,WAAY,GAIhB,OAAO0B,EAAOhE,MACZ,IAAK,qBACH,OAAOoE,EAAYjB,EAAOa,EAAO5D,QAAS,GAE5C,IAAK,yBACH,OAAOgE,EAAYjB,EAAOa,EAAO5D,SAAU,GAE7C,IAAK,8BACH,IAAMmC,EAAOY,EAAMjB,aAAaE,UAAUmC,MAAK,qBAAElD,KAAe2C,EAAO5D,WACvE,OAAOgE,EAAYjB,EAAOa,EAAO5D,SAAUmC,EAAKE,OAElD,QACE,OAAOU,EAAMjB,eC/DJ2C,EARC,SAAC1B,EAAOa,GAClB,MAAO,CACLrC,SAAUoC,EAAeZ,EAAOa,GAChC9B,aAAc0C,EAAmBzB,EAAOa,K1BY1Cc,EAAQC,YAAYF,EAASG,YAAgBC,KAT1B,kBAAM,SAAClF,GAAD,OAAc,SAACiE,GAC5C,OACSjE,EADa,kBAAXiE,EACO,CACdhE,KAAMgE,GAGMA,QAXI,SAAC,GAAD,IAAEkB,EAAF,EAAEA,SAAF,OAAgB,SAACC,GAAD,OAAU,SAACnB,GAE/C,OADAoB,QAAQC,IAAIrB,EAAOhE,KAAMkF,KAClBC,EAAKnB,SAkBdc,EAAM/E,UAJwBzB,EAIM,IAJM,SAACyB,GACvC4D,YAAW,kBAAI5D,EAAS,CAACC,KAAK,qBAAoB1B,MAKvCwG,Q2BhBT9F,EAAmB,IAAIuE,EAE7B+B,IAASC,OACP,cAAC,IAAD,CAAUT,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAACrG,EAAD,CAA0B+G,MAASxG,EAAnC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAORyG,SAASC,eAAe,W","file":"static/js/main.82abb008.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport reducer from \"./reducers\";\r\n\r\nconst logMiddleware = ({getState}) => (next) => (action) => {\r\n  console.log(action.type, getState());\r\n  return next(action);\r\n};\r\n\r\nconst stringMiddleware = () => (dispatch) => (action) => {\r\n  if (typeof action === \"string\") {\r\n    return dispatch({\r\n      type: action,\r\n    });\r\n  }\r\n  return dispatch(action);\r\n};\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware, stringMiddleware, logMiddleware));\r\n\r\nconst delayedActionCreator = (timeout) => (dispatch) => {\r\n    setTimeout(()=>dispatch({type:'DELAYED_ACTION'}), timeout)\r\n}\r\n\r\nstore.dispatch(delayedActionCreator(2000));\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nconst {Provider: BookstoreServiceProvider,\r\n       Consumer: BookstoreServiceConsumer} = React.createContext();\r\n\r\nexport{\r\n    BookstoreServiceProvider, BookstoreServiceConsumer\r\n};","import React from 'react';\r\n\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return (<Wrapped {...props} bookstoreService = {bookstoreService}/>)\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withBookstoreService;","import React from 'react';\r\n\r\nconst CartPage = () => {\r\n\r\n  return (\r\n    <div>\r\n      CartPage\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default CartPage;","import BookListItem from './book-list-item';\r\n\r\nexport default BookListItem;","import React from \"react\";\r\nimport \"./book-list-item.css\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst BookListItem = ({ book, onAddedToCart }) => {\r\n  const { title, author, price, coverImage } = book;\r\n  return (\r\n    <div className=\"book-list-item\">\r\n      <div className=\"book-cover\">\r\n        <img src={coverImage} alt=\"cover\" />\r\n      </div>\r\n      <div className=\"book-details\">\r\n        <Link to=\"/\" className=\"book-title\">\r\n          {title}\r\n        </Link>\r\n        <div className=\"book-author\">{author}</div>\r\n        <div className=\"book-price\">${price}</div>\r\n        <button onClick = {onAddedToCart} className=\"btn btn-info add-to-cart\">Add to cart</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookListItem;\r\n","const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks,\r\n    }\r\n}\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST',\r\n    }\r\n}\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    }\r\n}\r\n\r\n// const fetchBooksOld= (bookstoreService, dispatch) => () => {\r\n//     dispatch(booksRequested());\r\n// bookstoreService.getBooks()\r\n// .then((data)=>\r\n// dispatch(booksLoaded(data))\r\n// )\r\n// .catch((error)=>{dispatch(booksError(error))})\r\n// }\r\n\r\nconst fetchBooks = (bookstoreService) => () => (dispatch) => {\r\n    dispatch(booksRequested());\r\nbookstoreService.getBooks()\r\n.then((data)=>\r\ndispatch(booksLoaded(data))\r\n)\r\n.catch((error)=>{dispatch(booksError(error))})\r\n}\r\n\r\n\r\n\r\nexport const bookAddedToCart = (bookID) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookID\r\n    }\r\n}\r\n\r\nexport const bookRemovedFromCart = (bookID) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookID\r\n    }\r\n}\r\n\r\nexport const allBooksRemovedFromCart = (bookID) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookID\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchBooks\r\n};","const compose = (...funcs) => (comp) =>{\r\n    return funcs.reduceRight(\r\n        (prevResult, f) => f(prevResult),comp\r\n    )\r\n}\r\n\r\nexport default compose;","import Spinner from './spinner';\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport './spinner.css';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"loadingio-spinner-dual-ring-0xym5275ewa\">\r\n      <div className=\"ldio-kgkje28jzg\">\r\n        <div></div>\r\n        <div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import ErrorIndicator from './error-indicator';\r\nexport default ErrorIndicator;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <span>This is an error</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorIndicator;","import React, { Component } from \"react\";\r\nimport BookListItem from \"../book-list-item\";\r\nimport { connect } from \"react-redux\";\r\nimport { withBookstoreService } from \"../hoc\";\r\nimport { fetchBooks, bookAddedToCart } from \"../../actions\";\r\nimport { compose } from \"../../utils\";\r\nimport Spinner from \"../spinner\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\nimport {bindActionCreators} from 'redux';\r\nimport \"./book-list.css\";\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n    return (\r\n      <ul className=\"book-list\">\r\n        {books.map((book) => {\r\n          return (\r\n            <li key={book.id}>\r\n              <BookListItem book={book}\r\n              onAddedToCart={()=>onAddedToCart(book.id)} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  };\r\n\r\nclass BookListContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchBooks();\r\n  }\r\n\r\n  render() {\r\n    const { books, loading, error, onAddedToCart } = this.props;\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    if (error) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return <BookList books={books} onAddedToCart={onAddedToCart}/>\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = ({ bookList: {books, loading, error} }) => {\r\n  return {\r\n    books,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n  return bindActionCreators({\r\n    fetchBooks: fetchBooks(bookstoreService),\r\n    onAddedToCart: bookAddedToCart\r\n  }, dispatch)\r\n};\r\n\r\nexport default compose(\r\n  withBookstoreService(),\r\n  connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);\r\n","import BookList from './book-list';\r\n\r\nexport default BookList;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {bookAddedToCart, bookRemovedFromCart, allBooksRemovedFromCart} from '../../actions';\r\n\r\nimport \"./shopping-cart-table.css\";\r\n\r\nconst ShoppingCartTable = ({\r\n  items,\r\n  total,\r\n  onIncrease,\r\n  onDecrease,\r\n  onDelete,\r\n}) => {\r\n\r\n  const renderRow = (item, idx) => {\r\n    const { id, title, count, total } = item;\r\n    return (\r\n      <tr key={id}>\r\n        <td>{idx+1}</td>\r\n        <td>{title}</td>\r\n        <td>{count}</td>\r\n        <td>${total}</td>\r\n        <td>\r\n          <button onClick={()=>onDelete(id)}\r\n          className=\"btn btn-outline-danger btn-sm float-right\">\r\n            <i className=\"fa fa-trash-o\" />\r\n          </button>\r\n          <button onClick={()=>onIncrease(id)}\r\n          className=\"btn btn-outline-success btn-sm float-right\">\r\n            <i className=\"fa fa-plus-circle\" />\r\n          </button>\r\n          <button onClick={()=>onDecrease(id)}\r\n           className=\"btn btn-outline-warning btn-sm float-right\">\r\n            <i className=\"fa fa-minus-circle\" />\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"shopping-cart-table\">\r\n      <h2>Your Order</h2>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Item</th>\r\n            <th>Count</th>\r\n            <th>Price</th>\r\n            <th>Action</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n          {items.map(renderRow)}\r\n        </tbody>\r\n      </table>\r\n\r\n      <div className=\"total\">Total: ${total}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ shoppingCart: {cartItems, orderTotal} }) => {\r\n  return {\r\n    items: cartItems, \r\n    total: orderTotal\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\r\n    onIncrease: bookAddedToCart,\r\n    onDecrease: bookRemovedFromCart,\r\n    onDelete: allBooksRemovedFromCart,\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)\r\n(ShoppingCartTable);\r\n","import ShoppingCartTable from './shopping-cart-table';\r\n\r\nexport default ShoppingCartTable;","import React from 'react';\r\nimport BookList from '../book-list';\r\nimport ShoppingCartTable from '../shopping-cart-table';\r\n\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <div>\r\n      <BookList />\r\n      <ShoppingCartTable/>\r\n    </div>\r\n    \r\n  );\r\n\r\n};\r\n\r\n\r\nexport default HomePage;","import ShopHeader from './shop-header';\r\nexport default ShopHeader;","import React from 'react';\r\nimport './shop-header.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ShopHeader = ({ numItems, total }) => {\r\n  return (\r\n    <header className=\"shop-header row\">\r\n      <Link className=\"logo text-dark\" to=\"/\">ReStore</Link>\r\n      <Link to=\"/cart\" className=\"shopping-cart\">\r\n        <i className=\"cart-icon fa fa-shopping-cart\" />\r\n        {numItems} items (${total})\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default ShopHeader;","import App from './app';\r\n\r\nexport default App;","import React from \"react\";\r\nimport { withBookstoreService } from \"../hoc\";\r\nimport {Route, Switch} from 'react-router-dom';\r\nimport {CartPage, HomePage} from '../pages';\r\nimport ShopHeader from '../shop-header';\r\n\r\nconst App = ({bookstoreService}) => {\r\n  return (\r\n  <main role=\"main\" className=\"container\">\r\n    <ShopHeader numItems={5} total={210}/>\r\n    <Switch>\r\n        <Route path=\"/\" component ={HomePage} exact/>\r\n        <Route path=\"/cart\" component ={CartPage}/>\r\n    </Switch>\r\n  </main>)\r\n};\r\n\r\nexport default withBookstoreService()(App);\r\n","import ErrorBoundry from './error-boundry';\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport ErrorIndicator from '../error-indicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false,\r\n      };\r\n\r\n    componentDidCatch(){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n        if (this.state.hasError){\r\n            return <ErrorIndicator/>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}","export default class BookstoreService {\r\n\r\n  data = [\r\n    {\r\n      id: 1,\r\n      title: 'Production-Ready Microservices',\r\n      author: 'Susan J. Fowler',\r\n      price: 32,\r\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\r\n    {\r\n      id: 2,\r\n      title: 'Release It!',\r\n      author: 'Michael T. Nygard',\r\n      price: 45,\r\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\r\n  ];\r\n\r\n  getBooks() {\r\n    return new Promise((resolve, reject)=> {\r\n      setTimeout(()=>{\r\n        if(Math.random()>0.75){\r\n          reject(new Error('Something went wroooong'))\r\n        } else {\r\n          resolve(this.data)\r\n        }\r\n         \r\n        \r\n      }, 700)\r\n    })\r\n  }\r\n\r\n}","const updateBookList = (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      books: [],\r\n      loading: true,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  switch (action.type) {\r\n    case 'FETCH_BOOKS_REQUEST':\r\n      return {\r\n        books: [],\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_SUCCESS':\r\n      return {\r\n        books: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n\r\n    case 'FETCH_BOOKS_FAILURE':\r\n      return {\r\n        books: [],\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n\r\n    default:\r\n      return state.bookList;\r\n  }\r\n};\r\n\r\nexport default updateBookList;","const updateCartItems = (cartItems, item, idx) => {\r\n\r\n  if (item.count === 0) {\r\n    return [\r\n      ...cartItems.slice(0, idx),\r\n      ...cartItems.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  if (idx === -1) {\r\n    return [\r\n      ...cartItems,\r\n      item\r\n    ];\r\n  }\r\n\r\n  return [\r\n    ...cartItems.slice(0, idx),\r\n    item,\r\n    ...cartItems.slice(idx + 1)\r\n  ];\r\n};\r\n\r\nconst updateCartItem = (book, item = {}, quantity) => {\r\n\r\n  const {\r\n    id = book.id,\r\n    count = 0,\r\n    title = book.title,\r\n    total = 0 } = item;\r\n\r\n  return {\r\n    id,\r\n    title,\r\n    count: count + quantity,\r\n    total: total + quantity*book.price\r\n  };\r\n};\r\n\r\nconst updateOrder = (state, bookId, quantity) => {\r\n  const { bookList: { books }, shoppingCart: { cartItems }} = state;\r\n\r\n  const book = books.find(({id}) => id === bookId);\r\n  const itemIndex = cartItems.findIndex(({id}) => id === bookId);\r\n  const item = cartItems[itemIndex];\r\n\r\n  const newItem = updateCartItem(book, item, quantity);\r\n  return {\r\n    orderTotal: 0,\r\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\r\n  };\r\n};\r\n\r\nconst updateShoppingCart = (state, action) => {\r\n\r\n  if (state === undefined) {\r\n    return {\r\n      cartItems: [],\r\n      orderTotal: 0\r\n    }\r\n  }\r\n\r\n  switch(action.type) {\r\n    case 'BOOK_ADDED_TO_CART':\r\n      return updateOrder(state, action.payload, 1);\r\n\r\n    case 'BOOK_REMOVED_FROM_CART':\r\n      return updateOrder(state, action.payload, -1);\r\n\r\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\r\n      const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\r\n      return updateOrder(state, action.payload, -item.count);\r\n\r\n    default:\r\n      return state.shoppingCart;\r\n  }\r\n};\r\n\r\nexport default updateShoppingCart;","import updateBookList from './book-list';\r\nimport updateShoppingCart from './shopping-cart'\r\n\r\nconst reducer = (state, action) => {\r\n      return {\r\n        bookList: updateBookList(state, action),\r\n        shoppingCart: updateShoppingCart(state, action),\r\n\r\n      };\r\n};\r\n\r\nexport default reducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport App from './components/app';\r\nimport ErrorBoundry from \"./components/error-boundry\";\r\nimport BookstoreService from './services/bookstore-service';\r\nimport {BookstoreServiceConsumer, BookstoreServiceProvider} from './components/bookstore-service-context'; \r\nimport store from './store';\r\n\r\nconst bookstoreService = new BookstoreService();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ErrorBoundry>\r\n      <BookstoreServiceProvider value = {bookstoreService}>\r\n        <Router>\r\n          <App/>\r\n        </Router>\r\n      </BookstoreServiceProvider>\r\n    </ErrorBoundry>\r\n  </Provider>\r\n  \r\n  ,\r\n  document.getElementById('root'));"],"sourceRoot":""}